{
  "name": "app_desktop_adenan_khachnane",
  "version": "0.1.0",
  "private": true,
  "main": "electron/electron.js",
  "homepage": "./",
  "dependencies": {
    "@hello-pangea/dnd": "^18.0.1",
    "@react-google-maps/api": "^2.20.6",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^13.5.0",
    "firebase": "^11.6.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.4.1",
    "uuid": "^11.1.0",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron-dev": "concurrently \"cross-env BROWSER=none npm start\" \"wait-on http://localhost:3000 && electron .\"",
    "electron-pack": "electron-builder -c.extraMetadata.main=electron/electron.js",
    "preelectron-pack": "npm run build"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "electron": "^36.2.1",
    "electron-builder": "^26.0.12",
    "electron-is-dev": "^3.0.1",
    "electron-log": "^5.4.0",
    "react-scripts": "^5.0.1",
    "wait-on": "^8.0.3"
  },
  "description": "Application de bureau pour la gestion du menu du restaurant",
  "author": {
    "name": "Adenan Khachnane",
    "email": "adenan.khachnane@edu.ece.fr"
  },
  "build": {
    "appId": "com.restaurant.menu",
    "productName": "Restaurant Menu",
    "files": [
      "build/**/*",
      "electron/**/*"
    ],
    "directories": {
      "buildResources": "assets"
    },
    "mac": {
      "category": "public.app-category.food-and-drink",
      "icon": "assets/icons/icon.icns",
      "target": [
        "dmg",
        "zip"
      ]
    },
    "win": {
      "target": [
        "nsis"
      ],
      "icon": "assets/icons/icon.ico"
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "icon": "assets/icons/icon.png"
    },
    "extraResources": [
      {
        "from": "assets",
        "to": "assets"
      }
    ]
  }
}
